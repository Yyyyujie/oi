<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zx.dao.CompanyNewsMapper">
	<resultMap id="BaseResultMap" type="cn.zx.pojo.CompanyNews">
		<id column="new_id" jdbcType="INTEGER" property="new_id" />
		<result column="company_id" jdbcType="INTEGER" property="company_id" />
		<result column="user_id" jdbcType="INTEGER" property="user_id" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="content" jdbcType="VARCHAR" property="content" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="author" jdbcType="VARCHAR" property="author" />
		<result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="views" jdbcType="VARCHAR" property="views" />
		<result column="pageView" jdbcType="INTEGER" property="pageView" />
		<result column="type_id" jdbcType="INTEGER" property="type_id" />
		<result column="news_type" jdbcType="VARCHAR" property="news_type" />
		<result column="news_logo" jdbcType="VARCHAR" property="news_logo" />

	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		new_id, company_id, user_id, type, content, title, author, create_time,
		status, views,
		pageView, type_id
	</sql>
	<select id="selectByExample" parameterType="cn.zx.pojo.CompanyNewsExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from company_news
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from company_news
		where new_id = #{new_id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from company_news
		where new_id = #{new_id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="cn.zx.pojo.CompanyNewsExample">
		delete from company_news
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.zx.pojo.CompanyNews">
		insert into company_news (new_id, company_id, user_id,
		type, content, title,
		author, create_time, status,
		views, pageView, type_id
		)
		values (#{new_id,jdbcType=INTEGER}, #{company_id,jdbcType=INTEGER},
		#{user_id,jdbcType=INTEGER},
		#{type,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
		#{author,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP},
		#{status,jdbcType=INTEGER},
		#{views,jdbcType=VARCHAR}, #{pageView,jdbcType=INTEGER}, #{type_id,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.zx.pojo.CompanyNews">
		insert into company_news
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="new_id != null">
				new_id,
			</if>
			<if test="company_id != null">
				company_id,
			</if>
			<if test="user_id != null">
				user_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="content != null">
				content,
			</if>
			<if test="title != null">
				title,
			</if>
			<if test="author != null">
				author,
			</if>
			<if test="create_time != null">
				create_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="views != null">
				views,
			</if>
			<if test="pageView != null">
				pageView,
			</if>
			<if test="type_id != null">
				type_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="new_id != null">
				#{new_id,jdbcType=INTEGER},
			</if>
			<if test="company_id != null">
				#{company_id,jdbcType=INTEGER},
			</if>
			<if test="user_id != null">
				#{user_id,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				#{author,jdbcType=VARCHAR},
			</if>
			<if test="create_time != null">
				#{create_time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="views != null">
				#{views,jdbcType=VARCHAR},
			</if>
			<if test="pageView != null">
				#{pageView,jdbcType=INTEGER},
			</if>
			<if test="type_id != null">
				#{type_id,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="cn.zx.pojo.CompanyNewsExample"
		resultType="java.lang.Long">
		select count(*) from company_news
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update company_news
		<set>
			<if test="record.new_id != null">
				new_id = #{record.new_id,jdbcType=INTEGER},
			</if>
			<if test="record.company_id != null">
				company_id = #{record.company_id,jdbcType=INTEGER},
			</if>
			<if test="record.user_id != null">
				user_id = #{record.user_id,jdbcType=INTEGER},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=VARCHAR},
			</if>
			<if test="record.content != null">
				content = #{record.content,jdbcType=VARCHAR},
			</if>
			<if test="record.title != null">
				title = #{record.title,jdbcType=VARCHAR},
			</if>
			<if test="record.author != null">
				author = #{record.author,jdbcType=VARCHAR},
			</if>
			<if test="record.create_time != null">
				create_time = #{record.create_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.views != null">
				views = #{record.views,jdbcType=VARCHAR},
			</if>
			<if test="record.pageView != null">
				pageView = #{record.pageView,jdbcType=INTEGER},
			</if>
			<if test="record.type_id != null">
				type_id = #{record.type_id,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update company_news
		set new_id = #{record.new_id,jdbcType=INTEGER},
		company_id = #{record.company_id,jdbcType=INTEGER},
		user_id = #{record.user_id,jdbcType=INTEGER},
		type = #{record.type,jdbcType=VARCHAR},
		content = #{record.content,jdbcType=VARCHAR},
		title = #{record.title,jdbcType=VARCHAR},
		author = #{record.author,jdbcType=VARCHAR},
		create_time = #{record.create_time,jdbcType=TIMESTAMP},
		status = #{record.status,jdbcType=INTEGER},
		views = #{record.views,jdbcType=VARCHAR},
		pageView = #{record.pageView,jdbcType=INTEGER},
		type_id = #{record.type_id,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.zx.pojo.CompanyNews">
		update company_news
		<set>
			<if test="company_id != null">
				company_id = #{company_id,jdbcType=INTEGER},
			</if>
			<if test="user_id != null">
				user_id = #{user_id,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				author = #{author,jdbcType=VARCHAR},
			</if>
			<if test="create_time != null">
				create_time = #{create_time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="views != null">
				views = #{views,jdbcType=VARCHAR},
			</if>
			<if test="pageView != null">
				pageView = #{pageView,jdbcType=INTEGER},
			</if>
			<if test="type_id != null">
				type_id = #{type_id,jdbcType=INTEGER},
			</if>
		</set>
		where new_id = #{new_id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.zx.pojo.CompanyNews">
		update company_news
		set company_id = #{company_id,jdbcType=INTEGER},
		user_id = #{user_id,jdbcType=INTEGER},
		type = #{type,jdbcType=VARCHAR},
		content = #{content,jdbcType=VARCHAR},
		title = #{title,jdbcType=VARCHAR},
		author = #{author,jdbcType=VARCHAR},
		create_time = #{create_time,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER},
		views = #{views,jdbcType=VARCHAR},
		pageView = #{pageView,jdbcType=INTEGER},
		type_id = #{type_id,jdbcType=INTEGER}
		where new_id = #{new_id,jdbcType=INTEGER}
	</update>
	<select id="selectNews" resultType="CompanyNews">
		SELECT
		new_id,company_id,user_id,TYPE,author,title,content,n.create_time as create_time,
		n.STATUS as status,views,pageView,
		n.type_id,news_logo
		FROM company_news AS n
		LEFT JOIN company_news_type AS nt
		ON n.type_id=nt.news_type_id
		<where>
			n.status=1
			<if test="new_id !=null">
				and new_id=#{new_id}
			</if>
			<if test="company_id !=null">
				and company_id=#{company_id}
			</if>
			<if test="user_id !=null">
				and user_id=#{user_id}
			</if>
		</where>
		order by n.create_time desc
	</select>
	<select id="selectNewsWithAll" resultType="CompanyNews">
		SELECT
		new_id,n.company_id,c.company_name,n.user_id,s.realname AS
		user_name,TYPE,author,title,content,n.create_time,n.STATUS,views,pageView
		FROM company_news AS n
		LEFT JOIN oi_company AS c ON c.company_id=n.company_id
		LEFT JOIN company_staffer AS s ON s.user_id=n.user_id
		WHERE TYPE='平台公告' AND n.STATUS=1
		ORDER BY create_time DESC
	</select>

	<select id="NewselectNews" parameterType="java.util.Map" resultMap="BaseResultMap">
		SELECT new_id,content, title, n.create_time, pageView,
		news_type,type_id,news_logo FROM company_news AS n
		LEFT JOIN company_news_type AS t ON t.news_type_id=n.type_id
		WHERE n.status=1
		AND t.status=1
		AND n.company_id=#{company_id}
		AND (user_id = 0 OR user_id=#{user_id})
		<if test="search !=null and search !='' ">
			AND title LIKE CONCAT(CONCAT('%', #{search}), '%')
		</if>
		ORDER BY n.create_time DESC
		LIMIT #{limit} offset #{offset}
	</select>
</mapper>