<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zx.dao.CompanyStafferMapper">
	<resultMap id="BaseResultMap" type="cn.zx.pojo.CompanyStaffer">
		<id column="user_id" jdbcType="INTEGER" property="user_id" />
		<result column="company_id" jdbcType="INTEGER" property="company_id" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="sf_password" jdbcType="VARCHAR" property="sf_password" />
		<result column="realname" jdbcType="VARCHAR" property="realname" />
		<result column="face" jdbcType="VARCHAR" property="face" />
		<result column="ext0" jdbcType="VARCHAR" property="ext0" />
		<result column="nickname" jdbcType="CHAR" property="nickname" />
		<result column="reg_time" jdbcType="TIMESTAMP" property="reg_time" />
		<result column="in_time" jdbcType="TIMESTAMP" property="in_time" />
		<result column="reg_ip" jdbcType="VARCHAR" property="reg_ip" />
		<result column="last_time" jdbcType="TIMESTAMP" property="last_time" />
		<result column="last_ip" jdbcType="VARCHAR" property="last_ip" />
		<result column="status" jdbcType="BIT" property="status" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="post" jdbcType="INTEGER" property="post" />
		<result column="depart" jdbcType="INTEGER" property="depart" />
		<result column="postlevel" jdbcType="INTEGER" property="postlevel" />
		<result column="audit" jdbcType="INTEGER" property="audit" />
		<result column="open_id" jdbcType="VARCHAR" property="open_id" />
		<result column="token" jdbcType="CHAR" property="token" />
		<result column="header" jdbcType="VARCHAR" property="header" />
		<result column="hire_date" jdbcType="TIMESTAMP" property="hire_date" />
		<result column="next_promotion_time" jdbcType="TIMESTAMP"
			property="next_promotion_time" />
		<result column="last_promotion_time" jdbcType="TIMESTAMP"
			property="last_promotion_time" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_id, company_id, account, sf_password, realname, face,
		ext0, nickname,
		reg_time,
		in_time, reg_ip, last_time, last_ip, status,
		email, phone, post, depart,
		postlevel,
		audit, open_id, token, header,
		hire_date, next_promotion_time,
		last_promotion_time
	</sql>
	<select id="selectByExample" parameterType="cn.zx.pojo.CompanyStafferExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from company_staffer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from company_staffer
		where user_id = #{user_id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		company_staffer
		where user_id = #{user_id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="cn.zx.pojo.CompanyStafferExample">
		delete from company_staffer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="cn.zx.pojo.CompanyStaffer">
		insert into company_staffer
		(user_id, company_id, account,
		sf_password, realname, face,
		ext0,
		nickname, reg_time,
		in_time, reg_ip, last_time,
		last_ip, status, email,
		phone, post, depart,
		postlevel, audit, open_id,
		token, header,
		hire_date,
		next_promotion_time, last_promotion_time
		)
		values
		(#{user_id,jdbcType=INTEGER}, #{company_id,jdbcType=INTEGER},
		#{account,jdbcType=VARCHAR},
		#{sf_password,jdbcType=VARCHAR},
		#{realname,jdbcType=VARCHAR}, #{face,jdbcType=VARCHAR},
		#{ext0,jdbcType=VARCHAR}, #{nickname,jdbcType=CHAR},
		#{reg_time,jdbcType=TIMESTAMP},
		#{in_time,jdbcType=TIMESTAMP},
		#{reg_ip,jdbcType=VARCHAR}, #{last_time,jdbcType=TIMESTAMP},
		#{last_ip,jdbcType=VARCHAR}, #{status,jdbcType=BIT},
		#{email,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR},
		#{post,jdbcType=INTEGER}, #{depart,jdbcType=INTEGER},
		#{postlevel,jdbcType=INTEGER}, #{audit,jdbcType=INTEGER},
		#{open_id,jdbcType=VARCHAR},
		#{token,jdbcType=CHAR},
		#{header,jdbcType=VARCHAR}, #{hire_date,jdbcType=TIMESTAMP},
		#{next_promotion_time,jdbcType=TIMESTAMP},
		#{last_promotion_time,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.zx.pojo.CompanyStaffer">
		insert into company_staffer
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="user_id != null">
				user_id,
			</if>
			<if test="company_id != null">
				company_id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="sf_password != null">
				sf_password,
			</if>
			<if test="realname != null">
				realname,
			</if>
			<if test="face != null">
				face,
			</if>
			<if test="ext0 != null">
				ext0,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="reg_time != null">
				reg_time,
			</if>
			<if test="in_time != null">
				in_time,
			</if>
			<if test="reg_ip != null">
				reg_ip,
			</if>
			<if test="last_time != null">
				last_time,
			</if>
			<if test="last_ip != null">
				last_ip,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="post != null">
				post,
			</if>
			<if test="depart != null">
				depart,
			</if>
			<if test="postlevel != null">
				postlevel,
			</if>
			<if test="audit != null">
				audit,
			</if>
			<if test="open_id != null">
				open_id,
			</if>
			<if test="token != null">
				token,
			</if>
			<if test="header != null">
				header,
			</if>
			<if test="hire_date != null">
				hire_date,
			</if>
			<if test="next_promotion_time != null">
				next_promotion_time,
			</if>
			<if test="last_promotion_time != null">
				last_promotion_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="user_id != null">
				#{user_id,jdbcType=INTEGER},
			</if>
			<if test="company_id != null">
				#{company_id,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="sf_password != null">
				#{sf_password,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="face != null">
				#{face,jdbcType=VARCHAR},
			</if>
			<if test="ext0 != null">
				#{ext0,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=CHAR},
			</if>
			<if test="reg_time != null">
				#{reg_time,jdbcType=TIMESTAMP},
			</if>
			<if test="in_time != null">
				#{in_time,jdbcType=TIMESTAMP},
			</if>
			<if test="reg_ip != null">
				#{reg_ip,jdbcType=VARCHAR},
			</if>
			<if test="last_time != null">
				#{last_time,jdbcType=TIMESTAMP},
			</if>
			<if test="last_ip != null">
				#{last_ip,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIT},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="post != null">
				#{post,jdbcType=INTEGER},
			</if>
			<if test="depart != null">
				#{depart,jdbcType=INTEGER},
			</if>
			<if test="postlevel != null">
				#{postlevel,jdbcType=INTEGER},
			</if>
			<if test="audit != null">
				#{audit,jdbcType=INTEGER},
			</if>
			<if test="open_id != null">
				#{open_id,jdbcType=VARCHAR},
			</if>
			<if test="token != null">
				#{token,jdbcType=CHAR},
			</if>
			<if test="header != null">
				#{header,jdbcType=VARCHAR},
			</if>
			<if test="hire_date != null">
				#{hire_date,jdbcType=TIMESTAMP},
			</if>
			<if test="next_promotion_time != null">
				#{next_promotion_time,jdbcType=TIMESTAMP},
			</if>
			<if test="last_promotion_time != null">
				#{last_promotion_time,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="cn.zx.pojo.CompanyStafferExample"
		resultType="java.lang.Long">
		select count(*) from company_staffer
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update company_staffer
		<set>
			<if test="record.user_id != null">
				user_id = #{record.user_id,jdbcType=INTEGER},
			</if>
			<if test="record.company_id != null">
				company_id = #{record.company_id,jdbcType=INTEGER},
			</if>
			<if test="record.account != null">
				account = #{record.account,jdbcType=VARCHAR},
			</if>
			<if test="record.sf_password != null">
				sf_password = #{record.sf_password,jdbcType=VARCHAR},
			</if>
			<if test="record.realname != null">
				realname = #{record.realname,jdbcType=VARCHAR},
			</if>
			<if test="record.face != null">
				face = #{record.face,jdbcType=VARCHAR},
			</if>
			<if test="record.ext0 != null">
				ext0 = #{record.ext0,jdbcType=VARCHAR},
			</if>
			<if test="record.nickname != null">
				nickname = #{record.nickname,jdbcType=CHAR},
			</if>
			<if test="record.reg_time != null">
				reg_time = #{record.reg_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.in_time != null">
				in_time = #{record.in_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.reg_ip != null">
				reg_ip = #{record.reg_ip,jdbcType=VARCHAR},
			</if>
			<if test="record.last_time != null">
				last_time = #{record.last_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.last_ip != null">
				last_ip = #{record.last_ip,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=BIT},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.post != null">
				post = #{record.post,jdbcType=INTEGER},
			</if>
			<if test="record.depart != null">
				depart = #{record.depart,jdbcType=INTEGER},
			</if>
			<if test="record.postlevel != null">
				postlevel = #{record.postlevel,jdbcType=INTEGER},
			</if>
			<if test="record.audit != null">
				audit = #{record.audit,jdbcType=INTEGER},
			</if>
			<if test="record.open_id != null">
				open_id = #{record.open_id,jdbcType=VARCHAR},
			</if>
			<if test="record.token != null">
				token = #{record.token,jdbcType=CHAR},
			</if>
			<if test="record.header != null">
				header = #{record.header,jdbcType=VARCHAR},
			</if>
			<if test="record.hire_date != null">
				hire_date = #{record.hire_date,jdbcType=TIMESTAMP},
			</if>
			<if test="record.next_promotion_time != null">
				next_promotion_time =
				#{record.next_promotion_time,jdbcType=TIMESTAMP},
			</if>
			<if test="record.last_promotion_time != null">
				last_promotion_time =
				#{record.last_promotion_time,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update company_staffer
		set user_id =
		#{record.user_id,jdbcType=INTEGER},
		company_id =
		#{record.company_id,jdbcType=INTEGER},
		account =
		#{record.account,jdbcType=VARCHAR},
		sf_password =
		#{record.sf_password,jdbcType=VARCHAR},
		realname =
		#{record.realname,jdbcType=VARCHAR},
		face =
		#{record.face,jdbcType=VARCHAR},
		ext0 =
		#{record.ext0,jdbcType=VARCHAR},
		nickname =
		#{record.nickname,jdbcType=CHAR},
		reg_time =
		#{record.reg_time,jdbcType=TIMESTAMP},
		in_time =
		#{record.in_time,jdbcType=TIMESTAMP},
		reg_ip =
		#{record.reg_ip,jdbcType=VARCHAR},
		last_time =
		#{record.last_time,jdbcType=TIMESTAMP},
		last_ip =
		#{record.last_ip,jdbcType=VARCHAR},
		status =
		#{record.status,jdbcType=BIT},
		email =
		#{record.email,jdbcType=VARCHAR},
		phone =
		#{record.phone,jdbcType=VARCHAR},
		post =
		#{record.post,jdbcType=INTEGER},
		depart =
		#{record.depart,jdbcType=INTEGER},
		postlevel =
		#{record.postlevel,jdbcType=INTEGER},
		audit =
		#{record.audit,jdbcType=INTEGER},
		open_id =
		#{record.open_id,jdbcType=VARCHAR},
		token =
		#{record.token,jdbcType=CHAR},
		header =
		#{record.header,jdbcType=VARCHAR},
		hire_date =
		#{record.hire_date,jdbcType=TIMESTAMP},
		next_promotion_time =
		#{record.next_promotion_time,jdbcType=TIMESTAMP},
		last_promotion_time =
		#{record.last_promotion_time,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="cn.zx.pojo.CompanyStaffer">
		update company_staffer
		<set>
			<if test="company_id != null">
				company_id = #{company_id,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="sf_password != null">
				sf_password = #{sf_password,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realname = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="face != null">
				face = #{face,jdbcType=VARCHAR},
			</if>
			<if test="ext0 != null">
				ext0 = #{ext0,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=CHAR},
			</if>
			<if test="reg_time != null">
				reg_time = #{reg_time,jdbcType=TIMESTAMP},
			</if>
			<if test="in_time != null">
				in_time = #{in_time,jdbcType=TIMESTAMP},
			</if>
			<if test="reg_ip != null">
				reg_ip = #{reg_ip,jdbcType=VARCHAR},
			</if>
			<if test="last_time != null">
				last_time = #{last_time,jdbcType=TIMESTAMP},
			</if>
			<if test="last_ip != null">
				last_ip = #{last_ip,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIT},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="post != null">
				post = #{post,jdbcType=INTEGER},
			</if>
			<if test="depart != null">
				depart = #{depart,jdbcType=INTEGER},
			</if>
			<if test="postlevel != null">
				postlevel = #{postlevel,jdbcType=INTEGER},
			</if>
			<if test="audit != null">
				audit = #{audit,jdbcType=INTEGER},
			</if>
			<if test="open_id != null">
				open_id = #{open_id,jdbcType=VARCHAR},
			</if>
			<if test="token != null">
				token = #{token,jdbcType=CHAR},
			</if>
			<if test="header != null">
				header = #{header,jdbcType=VARCHAR},
			</if>
			<if test="hire_date != null">
				hire_date = #{hire_date,jdbcType=TIMESTAMP},
			</if>
			<if test="next_promotion_time != null">
				next_promotion_time =
				#{next_promotion_time,jdbcType=TIMESTAMP},
			</if>
			<if test="last_promotion_time != null">
				last_promotion_time =
				#{last_promotion_time,jdbcType=TIMESTAMP},
			</if>
		</set>
		where user_id = #{user_id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.zx.pojo.CompanyStaffer">
		update
		company_staffer
		set company_id = #{company_id,jdbcType=INTEGER},
		account = #{account,jdbcType=VARCHAR},
		sf_password =
		#{sf_password,jdbcType=VARCHAR},
		realname =
		#{realname,jdbcType=VARCHAR},
		face = #{face,jdbcType=VARCHAR},
		ext0 =
		#{ext0,jdbcType=VARCHAR},
		nickname = #{nickname,jdbcType=CHAR},
		reg_time = #{reg_time,jdbcType=TIMESTAMP},
		in_time =
		#{in_time,jdbcType=TIMESTAMP},
		reg_ip = #{reg_ip,jdbcType=VARCHAR},
		last_time = #{last_time,jdbcType=TIMESTAMP},
		last_ip =
		#{last_ip,jdbcType=VARCHAR},
		status = #{status,jdbcType=BIT},
		email =
		#{email,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		post =
		#{post,jdbcType=INTEGER},
		depart = #{depart,jdbcType=INTEGER},
		postlevel = #{postlevel,jdbcType=INTEGER},
		audit =
		#{audit,jdbcType=INTEGER},
		open_id = #{open_id,jdbcType=VARCHAR},
		token
		= #{token,jdbcType=CHAR},
		header = #{header,jdbcType=VARCHAR},
		hire_date = #{hire_date,jdbcType=TIMESTAMP},
		next_promotion_time =
		#{next_promotion_time,jdbcType=TIMESTAMP},
		last_promotion_time =
		#{last_promotion_time,jdbcType=TIMESTAMP}
		where user_id =
		#{user_id,jdbcType=INTEGER}
	</update>


	
	<select id="selectStaffByDepartAndPost" resultType="cn.zx.pojo.CompanyStaffer">
		SELECT
		company_staffer.user_id,company_staffer.company_id,post,depart,postlevel,face,
		company_post.post_name,company_post_level.level_name,company_depart.dept_name,
		company_message.company_name,account,sf_password,realname,ext0,nickname,reg_time,
		in_time,reg_ip,last_time,last_ip,company_staffer.STATUS,email,company_staffer.phone as phone,
		audit,open_id,token,header,hire_date,next_promotion_time,last_promotion_time,
		company_task.task_quality,TRUNCATE(AVG(task_quality),2)  AS qualityavg,
		company_task.task_efficiency,TRUNCATE(AVG(task_efficiency),2) AS efficiencyavg
		FROM company_staffer
		left JOIN company_post ON company_post.post_id=company_staffer.post
		left JOIN company_post_level ON
		company_post_level.level=company_staffer.postlevel
		left JOIN company_depart ON company_depart.dept_id=company_staffer.depart
		left JOIN company_message ON
		company_message.m_id=company_staffer.company_id
		left JOIN company_task ON company_task.to_user=company_staffer.user_id
		<where>
			<if test="user_id != null">
				and company_staffer.user_id=#{user_id}
			</if>
			<if test="company_id != null">
				and company_staffer.company_id =#{company_id}
			</if>
		</where>
		GROUP
		BY user_id
	</select>


	
	<select id="selectStaffByCompanyId"  resultType="cn.zx.pojo.CompanyStaffer">
				SELECT
		company_staffer.user_id,face,company_staffer.company_id,company_staffer.phone,
		post,company_task.task_quality,TRUNCATE(AVG(task_quality),2)  AS qualityavg,
		company_task.task_efficiency,TRUNCATE(AVG(task_efficiency),2) AS efficiencyavg,
		depart,postlevel,company_post.post_name,header,company_post_level.level_name,
		company_depart.dept_name,realname ,
		ELT(INTERVAL(CONV(HEX(left(CONVERT(realname USING gbk),1)),16,10),0xB0A1,
0xB0C5,0xB2C1,0xB4EE,0xB6EA,0xB7A2,0xB8C1,0xB9FE,
0xBBF7,0xBFA6,0xC0AC,0xC2E8,0xC4C3,0xC5B6,0xC5BE,0xC6DA,0xC8BB,0xC8F6,0xCBFA,
0xCDDA,0xCEF4,0xD1B9,0xD4D1),'A','B','C','D','E','F','G','H','J','K','L','M','N',
'O','P','Q','R','S','T','W','X','Y','Z') as PY FROM company_staffer
		left JOIN company_post ON company_post.post_id=company_staffer.post
		left JOIN company_post_level ON
		company_post_level.level=company_staffer.postlevel
		left JOIN company_depart ON company_depart.dept_id=company_staffer.depart
		left JOIN company_message ON
		company_message.m_id=company_staffer.company_id
		left JOIN company_task ON company_task.to_user=company_staffer.user_id
		WHERE 
		company_staffer.company_id = #{company_id} 
		and company_staffer.status=1 
		AND audit=1
		GROUP BY user_id
    	ORDER BY py
	</select>

	
	<select id="selectStaffer" resultType="CompanyStaffer">
  	select 
	user_id,company_id,account,realname,phone,reg_time,in_time,depart,post,postlevel,audit,
	face,email,hire_date
	 from company_staffer
	<where>
		status=1
		<if test="user_id != null">
			and user_id=#{user_id}
		</if>
		<if test="company_id != null">
			and company_id=#{company_id}
		</if>
	</where>
	order by reg_time desc
  </select>
 <!--  查询状态 -->
<select id="selectHiredateByCompanyId" resultType="CompanyStaffer">
		SELECT 
	user_id,company_id,realname,phone,reg_time,in_time,depart,post,postlevel,audit,STATUS,
	hire_date,email FROM company_staffer
	where
		status=1 and audit=1
</select>

<!-- 修改员工密码 -->
<update id="updatePWDByuseID" parameterType="cn.zx.pojo.CompanyStaffer" >
		update company_staffer
		set sf_password=#{sf_password}
		where user_id=#{user_id}	
	</update>
	
	
	
	<select id="selectByPrimaryKeyAllInfo" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT
		s.user_id,
		s.company_id,account,realname,face,ext0,nickname,reg_time,in_time,reg_ip,last_time,
		last_ip,s.status,email,s.phone,post,depart,postlevel,s.audit,open_id,token,header,hire_date,next_promotion_time,
		last_promotion_time,post_name,level_name,dept_name,c.company_name
		FROM company_staffer AS s
		LEFT JOIN company_post AS p ON p.post_id= s.post
		LEFT JOIN company_post_level AS pl ON pl.post_le_id=s.postlevel
		LEFT JOIN company_depart AS d ON d.dept_id=s.depart
		LEFT JOIN oi_company AS c ON c.company_id=s.company_id
		WHERE s.user_id= #{user_id,jdbcType=INTEGER}
	</select>
	<select id="selectByExampleAndTaskCount" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		SELECT
		s.user_id AS user_id,
		CONCAT(realname,' (',COUNT(IF(task_status BETWEEN 3 AND 5,TRUE,NULL)),')')AS
		realname,depart
		FROM
		company_staffer AS s
		LEFT JOIN `company_task` AS t ON t.`to_user`= s.`user_id`
		LEFT JOIN company_depart AS d ON d.dept_id=s.depart
		WHERE s.audit=1
		AND d.STATUS =1
		AND d.company_id=#{company_id,jdbcType=INTEGER}
		GROUP BY s.user_id
	</select>
		<!-- 查询部门下的人数 -->
	<select id="selectByDepart" resultType="CompanyStaffer">
		SELECT user_id,realname FROM company_staffer
		<where>
			STATUS=1 AND audit=1
			<if test="depart != null">
				and depart=#{depart}
			</if>
			<if test="company_id != null">
				and company_id=#{company_id}
			</if>
		</where>
	</select>
</mapper>